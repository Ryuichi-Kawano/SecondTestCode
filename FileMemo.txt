クラッシュについて
①不具合は「なるべく早く発覚したほうがいい」
②バグはさっさと、クラッシュとして発生させるべき
③見えない不具合のほうがよっぽど怖い(探しづらい)
→想定外の値がきたときは、プログラマがクラッシュさせる。

クラッシュさせる関数assert(値)
assert関数は、値が偽のとき(false/0)にクラッシュする
assert関数を使うには#include<cassert>をインクルードしておく


アニメーションする画像をロードする場合
itch.ioなどの場合、１つにまとまってるファイルと、別々になってる
ファイルがあります。

処理効率を考えると、原則的には「別々になってるファイル」よりも
「一つにまとまってるファイル」をロードするほうが効率がいいです。
理由：
①オープン/クローズするごとにコストがかかります。
	例えば100個ファイルがあった場合、まとめとけば1回で済むものが
	100回行われるため、めっちゃ効率悪い。
	あまりにも、手間と複雑さと、自分の力量にあわない場合は
	別にバラバラでも構わない。
②ディスク上のファイルがでかくなる。どういうことかというと
	ファイルサイズと、ディスク上のサイズは「違う」
	OSがHDD/SSDとか、DVDなどのメディアにファイルを配置する場合、
	OSごとに決まってたかなと思うんですが…セクタごとに配置する。
	１セクタ(区画)はだいたい4KB(4096バイト)なんですよね。
	なので、4096バイトの倍数未満のファイルの場合、ディスク上では
	4096に丸められる。
	サイズが1111バイトだった場合、4096にされる(ディスク上のサイズ)
③最近のアーキテクチャにおいて、画像ファイルのロードってのは
	画面上に表示するためのものである。
	ストレージ(HDD/SSD/DVD)→メインメモリ(RAM)で終わらなくて
	RAM→VRAM(画面上に表示するためのグラボ上のメモリ)
	ストレージ→メモリ上へコピー
	メインメモリ→VRAMへ転送(PCIバスという線)

※じゃあ、ぜーんぶまとめて最初っからVRAMにおいときゃいいのか？
VRAMってのは、容量が「比較的」少ないため、何でもかんでも
最初に置くと容量がオーバーして、逆に効率が悪くなるので、
そのへんは、ハードウェアとゲームの規模から考える。